{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIMA;EACJC,cAAc;EACdC;IACEC,cACG,KAAK,OACL,OAAO;;EAGZC,oBAAoB;;IAGhBC,4HAAuBC,WAAW,gBAYrCC;MAXDC,cAAAA,QACAC,cAAAA,QACAC,iBAAAA,WACAC,YAAAA,MACAC,UAAAA,IACAC,aAAAA,OACAC,kBAAAA,YACAC,sBAAAA,gBACAC,iBAAAA,WACAC,cAAAA,QACAC,eAAAA;MAEMC;6EACiC,0FAAhCC,yBAASC;;8EAEdC,OAAOC,UAAU,WAAW,8FADvBC,8BAAcC;8DAIX;QACJC,mBAAmBC,SAASC,uCAA6BpB;SACxDkB;MACHA,mBAAmBC,SAASE,cAAc;MAC1CH,iBAAiBI,QAAQ;MACzBJ,iBAAiBK,MAAMvB;0CAEFwB,OAAOC,QAAQxB;gHAAxByB,2BAAGC;QACbT,iBAAiBU,aAAaF,GAAGC;;UAE7BE,OAAOV,SAASW,QAAQX,SAASY,qBAAqB,QAAQ;MACpEF,KAAKG,YAAYd;;QAEbe,gBAAgB;MACpBhB,gBAAgB;MAChBH,OAAOC,QAAQmB,IAAIC,mHAAY3C,mDAAeS;MAC9CQ,UAAUA;;QAEN2B,iBAAiB;MACrBnB,gBAAgB;MAChBP,WAAWA;;IAGbQ,iBAAiBmB,iBAAiB,QAAQJ;IAC1Cf,iBAAiBmB,iBAAiB,SAASD;WAEpC;MACLlB,iBAAiBoB,oBAAoB,QAAQL;MAC7Cf,iBAAiBoB,oBAAoB,SAASL;;MAE9ChB,iBAAiBhB,QAAQT;8DAEnB;QACJwB,iBAAiB;;;IAGrBL,WAAW4B,QAAQC,YAAYrC;IAC/BW,OAAOC,QAAQmB,IAAIO,OACjB,WACA3B,OAAOC,QAAQmB,KACfvB,WAAW4B;;QAITG;;IAEFnC,mBAAmB,SAClBoC,OAAOpC,oBACPA,kBAAkB,MAClBA,iBAAiB;MAElBmC,WAAWnC;;MAEXmC,UAAU;;QAENE,UAAUC,WAAW;MACzBhC,WAAW;;MACXL,aAAaA;OACZkC;WAEI;MACL7B,WAAW;MACXiC,aAAaF;;MAEbzC,MAAMa,cAAcL;;yEAEXU,cACXf;MACEJ,WAAAA;MAAWE,IAAAA;MAAIC;QAASO,SAAAA;SAAYP;MAASN,KAAAA;kKAE5CiB,iBAAiB,+MACXK,cAAcf;MACnBJ,WAAW;MACXH,KAAKY;;;;AAMbd,qDAAekD,cAAc;AAE7BlD,qDAAemD;EACbhD,oEAAkBiD;EAClBhD,oEAAkBiD;EAClBhD,uEAAqB+C;EACrB9C,kEAAgB8C;EAChB5C,mEAAiB6C;EACjB5C,wEAAsB2C;EACtB7C,gEAAc6C;EACdxC,oEAAkB0C;EAClBzC,qEAAmByC;EACnB3C,uEAAqB2C;;AAGvBtD,qDAAeuD;EACbpD,QACE;EACFI,IAAI;EACJE,YAAY;;qDAGCT","sources":["./index.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DOMPurify from \"dompurify\";\n\nconst baseConfig = {\n  showMathMenu: true,\n  tex2jax: {\n    inlineMath: [\n      [\"$\", \"$\"],\n      [\"\\\\(\", \"\\\\)\"],\n    ],\n  },\n  skipStartupTypeset: true,\n};\n\nconst MathJaxPreview = React.forwardRef(({\n  script,\n  config,\n  className,\n  math,\n  id,\n  style,\n  wrapperTag,\n  msDelayDisplay, //milliseconds to delay display of div, 300 is default\n  onDisplay,\n  onLoad,\n  onError,\n}, ref) => {\n  const previewRef = useRef();\n  const [display, setDisplay] = useState(\"none\"); //prevent display during processing\n  const [loadingState, setLoadingState] = useState(\n    window.MathJax ? \"loaded\" : \"loading\"\n  );\n\n  useEffect(() => {\n    let mathjaxScriptTag = document.querySelector(`script[src=\"${script}\"]`);\n    if (!mathjaxScriptTag) {\n      mathjaxScriptTag = document.createElement(\"script\");\n      mathjaxScriptTag.async = true;\n      mathjaxScriptTag.src = script;\n\n      for (const [k, v] of Object.entries(config || {})) {\n        mathjaxScriptTag.setAttribute(k, v);\n      }\n      const node = document.head || document.getElementsByTagName(\"head\")[0];\n      node.appendChild(mathjaxScriptTag);\n    }\n    const onloadHandler = () => {\n      setLoadingState(\"loaded\");\n      window.MathJax.Hub.Config({ ...baseConfig, ...config });\n      onLoad && onLoad();\n    };\n    const onerrorHandler = () => {\n      setLoadingState(\"failed\");\n      onError && onError();\n    };\n\n    mathjaxScriptTag.addEventListener(\"load\", onloadHandler);\n    mathjaxScriptTag.addEventListener(\"error\", onerrorHandler);\n\n    return () => {\n      mathjaxScriptTag.removeEventListener(\"load\", onloadHandler);\n      mathjaxScriptTag.removeEventListener(\"error\", onloadHandler);\n    };\n  }, [setLoadingState, config, baseConfig]);\n\n  useEffect(() => {\n    if (loadingState !== \"loaded\") {\n      return;\n    }\n    previewRef.current.innerHTML = math;\n    window.MathJax.Hub.Queue([\n      \"Typeset\",\n      window.MathJax.Hub,\n      previewRef.current,\n    ]);\n\n    //delay display of div\n    var msDelay;\n    if ( //msDelayDisplay prop is a reasonable number of ms\n      msDelayDisplay !== null &&\n      !isNaN(+msDelayDisplay) &&\n      +msDelayDisplay >= 0 &&\n      +msDelayDisplay < 10000\n    ) {\n      msDelay = +msDelayDisplay;\n    } else {\n      msDelay = 300; // default 300ms delay\n    }\n    const timeout = setTimeout(() => {\n      setDisplay(\"inline\"); //display div after delay, hopefully typeset has finished\n      onDisplay && onDisplay();\n    }, msDelay);\n\n    return () => {\n      setDisplay(\"none\");\n      clearTimeout(timeout);\n    };\n  }, [math, loadingState, previewRef]);\n\n  return React.createElement(\n    wrapperTag,\n    { className, id, style: { display, ...style }, ref },\n    <>\n      {loadingState === \"failed\" && <span>fail loading mathjax lib</span>}\n      {React.createElement(wrapperTag, {\n        className: \"react-mathjax-preview-result\",\n        ref: previewRef,\n      })}\n    </>\n  );\n});\n\nMathJaxPreview.displayName = 'MathJaxPreview';\n\nMathJaxPreview.propTypes = {\n  script: PropTypes.string,\n  config: PropTypes.object,\n  className: PropTypes.string,\n  math: PropTypes.string,\n  style: PropTypes.object,\n  wrapperTag: PropTypes.string,\n  id: PropTypes.string,\n  onLoad: PropTypes.func,\n  onError: PropTypes.func,\n  onDisplay: PropTypes.func,\n};\n\nMathJaxPreview.defaultProps = {\n  script:\n    \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.6/MathJax.js?config=TeX-MML-AM_HTMLorMML\",\n  id: \"react-mathjax-preview\",\n  wrapperTag: \"div\",\n};\n\nexport default MathJaxPreview;\n"],"names":["$0cbe533d0a8e727c22fd9bc06f10a52c$var$baseConfig","showMathMenu","tex2jax","inlineMath","skipStartupTypeset","$0cbe533d0a8e727c22fd9bc06f10a52c$var$MathJaxPreview","forwardRef","ref","script","config","className","math","id","style","wrapperTag","msDelayDisplay","onDisplay","onLoad","onError","previewRef","display","setDisplay","window","MathJax","loadingState","setLoadingState","mathjaxScriptTag","document","querySelector","createElement","async","src","Object","entries","k","v","setAttribute","node","head","getElementsByTagName","appendChild","onloadHandler","Hub","Config","onerrorHandler","addEventListener","removeEventListener","current","innerHTML","Queue","msDelay","isNaN","timeout","setTimeout","clearTimeout","displayName","propTypes","string","object","func","defaultProps"],"version":3,"file":"index.js.map"}